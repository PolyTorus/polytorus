name: Code Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: llvm-tools-preview

    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-coverage-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-coverage-
          ${{ runner.os }}-cargo-

    - name: Install grcov
      run: |
        if ! command -v grcov &> /dev/null; then
          cargo install grcov
        fi

    - name: Clean previous coverage data
      run: |
        cargo clean
        rm -rf *.profraw

    - name: Run tests with coverage
      env:
        RUSTFLAGS: "-C instrument-coverage"
        LLVM_PROFILE_FILE: "polytorus-%p-%m.profraw"
      run: |
        cargo test --verbose --all-features

    - name: Generate coverage report
      run: |
        grcov . \
          --binary-path ./target/debug/deps/ \
          --source-dir . \
          --output-type lcov \
          --llvm \
          --branch \
          --ignore-not-existing \
          --ignore '../*' \
          --ignore "/*" \
          --ignore 'target/*' \
          --ignore 'tests/*' \
          --output-path coverage.lcov

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.lcov
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true

    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage.lcov

    - name: Generate HTML coverage report
      run: |
        grcov . \
          --binary-path ./target/debug/deps/ \
          --source-dir . \
          --output-type html \
          --llvm \
          --branch \
          --ignore-not-existing \
          --ignore '../*' \
          --ignore "/*" \
          --ignore 'target/*' \
          --ignore 'tests/*' \
          --output-path coverage-html

    - name: Upload HTML coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-html-report
        path: coverage-html/
