name: Test by `cargo test`

on:
  push:
    branches: ["develop", "feature/**", "fix/**"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            git \
            pkg-config \
            libssl-dev \
            autoconf \
            automake \
            libtool \
            libgmp-dev \
            libntl-dev \
            wget

      - name: Install OpenFHE dependencies
        run: |
          # Install additional dependencies for OpenFHE
          sudo apt-get install -y \
            libboost-all-dev \
            libgmp3-dev \
            libmpfr-dev \
            libfftw3-dev
            
      - name: Clone and build OpenFHE
        run: |
          # Clone the specific fork and branch
          git clone https://github.com/MachinaIO/openfhe-development.git
          cd openfhe-development
          git checkout feat/improve_determinant
          
          # Create build directory
          mkdir build
          cd build
          
          # Configure with cmake - disable problematic flags
          cmake -DCMAKE_INSTALL_PREFIX=/usr/local \
                -DCMAKE_BUILD_TYPE=Release \
                -DBUILD_UNITTESTS=OFF \
                -DBUILD_EXAMPLES=OFF \
                -DBUILD_BENCHMARKS=OFF \
                -DWITH_OPENMP=ON \
                -DCMAKE_CXX_STANDARD=17 \
                -DCMAKE_CXX_FLAGS="-O2 -DNDEBUG -Wno-unused-parameter -Wno-unused-function -Wno-missing-field-initializers" \
                ..
                
          # Build (use multiple cores)
          make -j$(nproc)
          
          # Install to /usr/local/lib
          sudo make install
          
          # Update library cache
          sudo ldconfig
          
      - name: Verify OpenFHE installation
        run: |
          # Check if OpenFHE libraries are installed
          ls -la /usr/local/lib/libOPENFHE* || echo "OpenFHE libraries not found"
          ls -la /usr/local/include/openfhe/ || echo "OpenFHE headers not found"
          
          # Check library paths
          echo "LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"

      # https://github.com/dtolnay/rust-toolchain
      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly-2025-01-01  # Updated to support Rust 1.87+ features
          components: rustfmt, clippy

      - name: Cache rust components
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          
      - name: Set environment variables for OpenFHE
        run: |
          echo "OPENFHE_ROOT=/usr/local" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
          echo "CXXFLAGS=-std=c++17 -O2 -DNDEBUG -Wno-unused-parameter -Wno-unused-function -Wno-missing-field-initializers" >> $GITHUB_ENV
          echo "CXX_FLAGS=-std=c++17 -O2 -DNDEBUG -Wno-unused-parameter -Wno-unused-function -Wno-missing-field-initializers" >> $GITHUB_ENV
          
      - name: Check Rust version
        run: |
          rustc --version
          cargo --version

      - name: Test
        run: |
          export RUST_TEST_THREADS=$(nproc)
          export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
          export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
          cargo test
