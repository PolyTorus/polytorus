# PolyTorus Testnet Docker Image
FROM rust:1.82-bullseye as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy source code
COPY . .

# Build the release binary
RUN cargo build --release --bin polytorus

# Runtime stage
FROM debian:bullseye-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    python3 \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Create application user
RUN useradd -m -u 1000 polytorus

# Create directories
RUN mkdir -p /app /data /config /logs \
    && chown -R polytorus:polytorus /app /data /config /logs

# Copy binary from builder
COPY --from=builder /app/target/release/polytorus /usr/local/bin/polytorus

# Make binary executable
RUN chmod +x /usr/local/bin/polytorus

# Copy configuration files
COPY --chown=polytorus:polytorus config/ /config/

# Set working directory
WORKDIR /app

# Switch to application user
USER polytorus

# Expose ports
EXPOSE 8000 9000 3000 8080 9020

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:9000/health || exit 1

# Default command
CMD ["polytorus", "--help"]